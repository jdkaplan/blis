---
source: src/compile.rs
description: "func main() {\n    let x = 0;\n    loop twice {\n        if x >= 2 {\n            break twice;\n        }\n\n        println(\"twice before\", x);\n        x = x + 1;\n        println(\"twice after \", x);\n    }\n    println(\"out of twice\", x);\n\n    loop outer {\n        if x < 0 {\n            println(\"break outer\", x);\n            break;\n        }\n\n        loop inner {\n            loop {\n                break;\n            }\n\n            if x > 2 {\n                println(\"break inner\", x);\n                break;\n            }\n\n            println(\"inner before\", x);\n            x = x + 1;\n            println(\"inner after \", x);\n        }\n        println(\"out of inner\", x);\n        // x = 3\n\n        if x > 2 {\n            x = -1;\n            continue;\n        }\n\n        println(\"never happens\");\n        x = x - 1;\n    }\n    println(\"out of outer\", x);\n}\n\nmain();\n"
input_file: test_programs/loops.blis
---
DisassembledChunk(
  constants: [
    Func(DisassembledFunc(
      name: "main",
      arity: 0,
      upvalues: 0,
      chunk: DisassembledChunk(
        constants: [
          Rational(((0, []), (1, [
            1,
          ]))),
          Rational(((1, [
            2,
          ]), (1, [
            1,
          ]))),
          String("twice before"),
          Rational(((1, [
            1,
          ]), (1, [
            1,
          ]))),
          String("twice after "),
          String("out of twice"),
          String("break outer"),
          String("break inner"),
          String("inner before"),
          String("inner after "),
          String("out of inner"),
          String("never happens"),
          String("out of outer"),
        ],
        globals: [
          "println",
        ],
        code: [
          Constant(0),
          GetLocal(1),
          Constant(1),
          Ge,
          JumpFalsePop(11),
          PopN(0),
          Jump(39),
          Nil,
          PopUnderN(0),
          Nil,
          Pop,
          GetGlobal(0),
          Constant(2),
          GetLocal(1),
          Call(2),
          Pop,
          GetLocal(1),
          Constant(3),
          Add,
          SetLocal(1),
          GetGlobal(0),
          Constant(4),
          GetLocal(1),
          Call(2),
          Pop,
          Nil,
          PopUnderN(0),
          Loop(46),
          GetGlobal(0),
          Constant(5),
          GetLocal(1),
          Call(2),
          Pop,
          GetLocal(1),
          Constant(0),
          Lt,
          JumpFalsePop(20),
          GetGlobal(0),
          Constant(6),
          GetLocal(1),
          Call(2),
          Pop,
          PopN(0),
          Jump(129),
          Nil,
          PopUnderN(0),
          Nil,
          Pop,
          PopN(0),
          Jump(9),
          Nil,
          PopUnderN(0),
          Loop(8),
          GetLocal(1),
          Constant(1),
          Gt,
          JumpFalsePop(20),
          GetGlobal(0),
          Constant(7),
          GetLocal(1),
          Call(2),
          Pop,
          PopN(0),
          Jump(39),
          Nil,
          PopUnderN(0),
          Nil,
          Pop,
          GetGlobal(0),
          Constant(8),
          GetLocal(1),
          Call(2),
          Pop,
          GetLocal(1),
          Constant(3),
          Add,
          SetLocal(1),
          GetGlobal(0),
          Constant(9),
          GetLocal(1),
          Call(2),
          Pop,
          Nil,
          PopUnderN(0),
          Loop(66),
          GetGlobal(0),
          Constant(10),
          GetLocal(1),
          Call(2),
          Pop,
          GetLocal(1),
          Constant(1),
          Gt,
          JumpFalsePop(16),
          Constant(3),
          Neg,
          SetLocal(1),
          PopN(0),
          Loop(120),
          Nil,
          PopUnderN(0),
          Nil,
          Pop,
          GetGlobal(0),
          Constant(11),
          Call(1),
          Pop,
          GetLocal(1),
          Constant(3),
          Sub,
          SetLocal(1),
          Nil,
          PopUnderN(0),
          Loop(145),
          GetGlobal(0),
          Constant(12),
          GetLocal(1),
          Call(2),
          Pop,
          Nil,
          PopUnderN(1),
          Return,
        ],
      ),
    )),
  ],
  globals: [
    "main",
  ],
  code: [
    Closure(0, 0, []),
    DefineGlobal(0),
    GetGlobal(0),
    Call(0),
    Pop,
    Nil,
    Return,
  ],
)
