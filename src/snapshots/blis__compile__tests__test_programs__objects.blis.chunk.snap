---
source: src/compile.rs
description: "func main() {\n    let one = Counter.new(\"uno\");\n    let two = Counter.new(\"dos\");\n\n    println(one);\n    println(one.id, one.name);\n\n    println(two);\n    println(two.id, two.name);\n\n    // Eventually, gradual typing will let you prevent this. But for now...\n    one.two = two;\n    two.one = one;\n\n    println(one.two);\n    println(one[\"two\"]);\n    println(two.one);\n    println(two[\"one\"]);\n}\n\nlet id = 0;\n\ntype Counter with {\n    func new(name) {\n        id = id + 1;\n\n        Counter {\n            id = id,\n            name = name,\n            count = 0,\n        }\n    }\n\n    func self.incr() {\n        self.add(1);\n    }\n\n    func self.add(delta) {\n        self.count = self.count + delta;\n    }\n}\n\nmain();\n"
input_file: test_programs/objects.blis
---
DisassembledChunk(
  constants: [
    Func(DisassembledFunc(
      name: "main",
      arity: 0,
      upvalues: 0,
      chunk: DisassembledChunk(
        constants: [
          String("new"),
          String("uno"),
          String("new"),
          String("dos"),
          String("id"),
          String("name"),
          String("id"),
          String("name"),
          String("two"),
          String("one"),
          String("two"),
          String("two"),
          String("one"),
          String("one"),
        ],
        globals: [
          "Counter",
          "println",
        ],
        code: [
          GetGlobal(0),
          GetField(0),
          Constant(1),
          Call(1),
          GetGlobal(0),
          GetField(2),
          Constant(3),
          Call(1),
          GetGlobal(1),
          GetLocal(1),
          Call(1),
          Pop,
          GetGlobal(1),
          GetLocal(1),
          GetField(4),
          GetLocal(1),
          GetField(5),
          Call(2),
          Pop,
          GetGlobal(1),
          GetLocal(2),
          Call(1),
          Pop,
          GetGlobal(1),
          GetLocal(2),
          GetField(6),
          GetLocal(2),
          GetField(7),
          Call(2),
          Pop,
          GetLocal(1),
          GetLocal(2),
          SetField(8),
          Pop,
          GetLocal(2),
          GetLocal(1),
          SetField(9),
          Pop,
          GetGlobal(1),
          GetLocal(1),
          GetField(10),
          Call(1),
          Pop,
          GetGlobal(1),
          GetLocal(1),
          Constant(11),
          GetIndex,
          Call(1),
          Pop,
          GetGlobal(1),
          GetLocal(2),
          GetField(12),
          Call(1),
          Pop,
          GetGlobal(1),
          GetLocal(2),
          Constant(13),
          GetIndex,
          Call(1),
          Pop,
          Nil,
          PopUnderN(2),
          Return,
        ],
      ),
    )),
    Rational(((0, []), (1, [
      1,
    ]))),
    String("Counter"),
    Func(DisassembledFunc(
      name: "new",
      arity: 1,
      upvalues: 0,
      chunk: DisassembledChunk(
        constants: [
          Rational(((1, [
            1,
          ]), (1, [
            1,
          ]))),
          String("id"),
          String("name"),
          String("count"),
          Rational(((0, []), (1, [
            1,
          ]))),
        ],
        globals: [
          "id",
          "Counter",
        ],
        code: [
          GetGlobal(0),
          Constant(0),
          Add,
          SetGlobal(0),
          GetGlobal(1),
          Object,
          GetGlobal(0),
          SetField(1),
          GetLocal(0),
          SetField(2),
          Constant(4),
          SetField(3),
          PopUnderN(0),
          Return,
        ],
      ),
    )),
    String("new"),
    Func(DisassembledFunc(
      name: "incr",
      arity: 0,
      upvalues: 0,
      chunk: DisassembledChunk(
        constants: [
          String("add"),
          Rational(((1, [
            1,
          ]), (1, [
            1,
          ]))),
        ],
        globals: [],
        code: [
          GetLocal(0),
          GetField(0),
          Constant(1),
          Call(1),
          Pop,
          Nil,
          PopUnderN(0),
          Return,
        ],
      ),
    )),
    String("incr"),
    Func(DisassembledFunc(
      name: "add",
      arity: 1,
      upvalues: 0,
      chunk: DisassembledChunk(
        constants: [
          String("count"),
          String("count"),
        ],
        globals: [],
        code: [
          GetLocal(0),
          GetLocal(0),
          GetField(1),
          GetLocal(1),
          Add,
          SetField(0),
          Pop,
          Nil,
          PopUnderN(0),
          Return,
        ],
      ),
    )),
    String("add"),
  ],
  globals: [
    "main",
    "id",
    "Counter",
  ],
  code: [
    Closure(0, 0, []),
    DefineGlobal(0),
    Constant(1),
    DefineGlobal(1),
    Type(2),
    Closure(3, 0, []),
    SetMethod(4),
    Closure(5, 0, []),
    SetMethod(6),
    Closure(7, 0, []),
    SetMethod(8),
    DefineGlobal(2),
    GetGlobal(0),
    Call(0),
    Pop,
    Nil,
    Return,
  ],
)
