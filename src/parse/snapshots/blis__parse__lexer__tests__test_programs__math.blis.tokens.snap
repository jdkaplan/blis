---
source: src/parse/lexer.rs
description: "let v = 1 + 2 - (3 * 4 / 5 * 6) + 7;\nprintln(v);\n\nprintln( 22 %  7);\nprintln(-22 %  7);\nprintln(-22 % -7);\nprintln( 22 % -7);\nprintln( 1.23 %  1.0);\nprintln(-1.23 %  1.0);\nprintln(-1.23 % -1.0);\nprintln( 1.23 % -1.0);\nprintln( 22/7 %  1);\nprintln(-22/7 %  1);\nprintln(-22/7 % -1);\nprintln( 22/7 % -1);\n\nprintln(0 == 1);\nprintln(0 != 1);\nprintln(0 <  1);\nprintln(0 <= 1);\nprintln(0 >  1);\nprintln(0 >= 1);\n"
input_file: test_programs/math.blis
---
[
  Lexeme(
    token: Let,
    text: "let",
    line: 1,
  ),
  Lexeme(
    token: Identifier,
    text: "v",
    line: 1,
  ),
  Lexeme(
    token: Equal,
    text: "=",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 1,
  ),
  Lexeme(
    token: Plus,
    text: "+",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "2",
    line: 1,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 1,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "3",
    line: 1,
  ),
  Lexeme(
    token: Star,
    text: "*",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "4",
    line: 1,
  ),
  Lexeme(
    token: Slash,
    text: "/",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "5",
    line: 1,
  ),
  Lexeme(
    token: Star,
    text: "*",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "6",
    line: 1,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 1,
  ),
  Lexeme(
    token: Plus,
    text: "+",
    line: 1,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 1,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 1,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 2,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 2,
  ),
  Lexeme(
    token: Identifier,
    text: "v",
    line: 2,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 2,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 2,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 4,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 4,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 4,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 4,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 4,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 4,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 4,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 5,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 5,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 5,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 5,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 5,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 5,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 5,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 5,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 6,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 6,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 6,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 6,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 6,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 6,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 6,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 6,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 6,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 7,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 7,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 7,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 7,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 7,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 7,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 7,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 7,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 8,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 8,
  ),
  Lexeme(
    token: Float,
    text: "1.23",
    line: 8,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 8,
  ),
  Lexeme(
    token: Float,
    text: "1.0",
    line: 8,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 8,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 8,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 9,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 9,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 9,
  ),
  Lexeme(
    token: Float,
    text: "1.23",
    line: 9,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 9,
  ),
  Lexeme(
    token: Float,
    text: "1.0",
    line: 9,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 9,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 9,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 10,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 10,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 10,
  ),
  Lexeme(
    token: Float,
    text: "1.23",
    line: 10,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 10,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 10,
  ),
  Lexeme(
    token: Float,
    text: "1.0",
    line: 10,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 10,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 10,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 11,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 11,
  ),
  Lexeme(
    token: Float,
    text: "1.23",
    line: 11,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 11,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 11,
  ),
  Lexeme(
    token: Float,
    text: "1.0",
    line: 11,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 11,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 11,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 12,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 12,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 12,
  ),
  Lexeme(
    token: Slash,
    text: "/",
    line: 12,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 12,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 12,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 12,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 12,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 12,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 13,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 13,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 13,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 13,
  ),
  Lexeme(
    token: Slash,
    text: "/",
    line: 13,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 13,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 13,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 13,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 13,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 13,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 14,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 14,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 14,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 14,
  ),
  Lexeme(
    token: Slash,
    text: "/",
    line: 14,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 14,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 14,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 14,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 14,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 14,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 14,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 15,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 15,
  ),
  Lexeme(
    token: Integer,
    text: "22",
    line: 15,
  ),
  Lexeme(
    token: Slash,
    text: "/",
    line: 15,
  ),
  Lexeme(
    token: Integer,
    text: "7",
    line: 15,
  ),
  Lexeme(
    token: Percent,
    text: "%",
    line: 15,
  ),
  Lexeme(
    token: Minus,
    text: "-",
    line: 15,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 15,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 15,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 15,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 17,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 17,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 17,
  ),
  Lexeme(
    token: EqualEqual,
    text: "==",
    line: 17,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 17,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 17,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 17,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 18,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 18,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 18,
  ),
  Lexeme(
    token: BangEqual,
    text: "!=",
    line: 18,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 18,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 18,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 18,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 19,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 19,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 19,
  ),
  Lexeme(
    token: Less,
    text: "<",
    line: 19,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 19,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 19,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 19,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 20,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 20,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 20,
  ),
  Lexeme(
    token: LessEqual,
    text: "<=",
    line: 20,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 20,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 20,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 20,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 21,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 21,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 21,
  ),
  Lexeme(
    token: Greater,
    text: ">",
    line: 21,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 21,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 21,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 21,
  ),
  Lexeme(
    token: Identifier,
    text: "println",
    line: 22,
  ),
  Lexeme(
    token: LeftParen,
    text: "(",
    line: 22,
  ),
  Lexeme(
    token: Integer,
    text: "0",
    line: 22,
  ),
  Lexeme(
    token: GreaterEqual,
    text: ">=",
    line: 22,
  ),
  Lexeme(
    token: Integer,
    text: "1",
    line: 22,
  ),
  Lexeme(
    token: RightParen,
    text: ")",
    line: 22,
  ),
  Lexeme(
    token: Semicolon,
    text: ";",
    line: 22,
  ),
  Lexeme(
    token: Eof,
    text: "",
    line: 23,
  ),
]
