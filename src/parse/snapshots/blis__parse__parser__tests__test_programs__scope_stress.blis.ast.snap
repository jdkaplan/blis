---
source: src/parse/parser.rs
description: "let x = 1;\n\nfunc f(x, y, z) {\n    let x = x + 10;\n    let y = x + 20;\n\n    {\n        let z = z;\n        println(x, y, z);\n    }\n\n    println(x, y, z);\n}\n\nfunc main() {\n    f(x, 2, 3);\n\n    let x = 4;\n    f(x, 4, 5);\n}\n\nmain();\n"
input_file: test_programs/scope_stress.blis
---
Program(
  decls: [
    Let(Let(
      ident: Identifier(
        name: "x",
      ),
      expr: LogicOr(LogicOr(
        first: LogicAnd(
          first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
            1,
          ])))))))))),
          rest: [],
        ),
        rest: [],
      )),
    )),
    Func(Func(
      ident: Identifier(
        name: "f",
      ),
      params: [
        Identifier(
          name: "x",
        ),
        Identifier(
          name: "y",
        ),
        Identifier(
          name: "z",
        ),
      ],
      body: Block(
        decls: [
          Let(Let(
            ident: Identifier(
              name: "x",
            ),
            expr: LogicOr(LogicOr(
              first: LogicAnd(
                first: Value(Value(Add(Value(Value(Value(Value(Atom(Identifier(Identifier(
                  name: "x",
                ))))))), Value(Value(Value(Atom(Literal(Integer((1, [
                  10,
                ])))))))))),
                rest: [],
              ),
              rest: [],
            )),
          )),
          Let(Let(
            ident: Identifier(
              name: "y",
            ),
            expr: LogicOr(LogicOr(
              first: LogicAnd(
                first: Value(Value(Add(Value(Value(Value(Value(Atom(Identifier(Identifier(
                  name: "x",
                ))))))), Value(Value(Value(Atom(Literal(Integer((1, [
                  20,
                ])))))))))),
                rest: [],
              ),
              rest: [],
            )),
          )),
          Statement(Expression(LogicOr(LogicOr(
            first: LogicAnd(
              first: Value(Value(Value(Value(Value(Value(Block(Block(
                decls: [
                  Let(Let(
                    ident: Identifier(
                      name: "z",
                    ),
                    expr: LogicOr(LogicOr(
                      first: LogicAnd(
                        first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                          name: "z",
                        ))))))))),
                        rest: [],
                      ),
                      rest: [],
                    )),
                  )),
                  Statement(Expression(LogicOr(LogicOr(
                    first: LogicAnd(
                      first: Value(Value(Value(Value(Value(Call(Value(Atom(Identifier(Identifier(
                        name: "println",
                      )))), [
                        LogicOr(LogicOr(
                          first: LogicAnd(
                            first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                              name: "x",
                            ))))))))),
                            rest: [],
                          ),
                          rest: [],
                        )),
                        LogicOr(LogicOr(
                          first: LogicAnd(
                            first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                              name: "y",
                            ))))))))),
                            rest: [],
                          ),
                          rest: [],
                        )),
                        LogicOr(LogicOr(
                          first: LogicAnd(
                            first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                              name: "z",
                            ))))))))),
                            rest: [],
                          ),
                          rest: [],
                        )),
                      ])))))),
                      rest: [],
                    ),
                    rest: [],
                  )))),
                ],
                expr: None,
              )))))))),
              rest: [],
            ),
            rest: [],
          )))),
          Statement(Expression(LogicOr(LogicOr(
            first: LogicAnd(
              first: Value(Value(Value(Value(Value(Call(Value(Atom(Identifier(Identifier(
                name: "println",
              )))), [
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                      name: "x",
                    ))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                      name: "y",
                    ))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                      name: "z",
                    ))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
              ])))))),
              rest: [],
            ),
            rest: [],
          )))),
        ],
        expr: None,
      ),
    )),
    Func(Func(
      ident: Identifier(
        name: "main",
      ),
      params: [],
      body: Block(
        decls: [
          Statement(Expression(LogicOr(LogicOr(
            first: LogicAnd(
              first: Value(Value(Value(Value(Value(Call(Value(Atom(Identifier(Identifier(
                name: "f",
              )))), [
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                      name: "x",
                    ))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
                      2,
                    ])))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
                      3,
                    ])))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
              ])))))),
              rest: [],
            ),
            rest: [],
          )))),
          Let(Let(
            ident: Identifier(
              name: "x",
            ),
            expr: LogicOr(LogicOr(
              first: LogicAnd(
                first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
                  4,
                ])))))))))),
                rest: [],
              ),
              rest: [],
            )),
          )),
          Statement(Expression(LogicOr(LogicOr(
            first: LogicAnd(
              first: Value(Value(Value(Value(Value(Call(Value(Atom(Identifier(Identifier(
                name: "f",
              )))), [
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Identifier(Identifier(
                      name: "x",
                    ))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
                      4,
                    ])))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
                LogicOr(LogicOr(
                  first: LogicAnd(
                    first: Value(Value(Value(Value(Value(Value(Atom(Literal(Integer((1, [
                      5,
                    ])))))))))),
                    rest: [],
                  ),
                  rest: [],
                )),
              ])))))),
              rest: [],
            ),
            rest: [],
          )))),
        ],
        expr: None,
      ),
    )),
    Statement(Expression(LogicOr(LogicOr(
      first: LogicAnd(
        first: Value(Value(Value(Value(Value(Call(Value(Atom(Identifier(Identifier(
          name: "main",
        )))), [])))))),
        rest: [],
      ),
      rest: [],
    )))),
  ],
)
